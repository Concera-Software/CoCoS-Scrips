// ---------------------------------------------------------------------
// BASE CONFIGURATION
//
$countryCode="NL";
$tagPrefix="scheduledHoliday_".$countryCode."_";
$url="https://date.nager.at/api/v3/PublicHolidays/".date("Y")."/".$countryCode;
$cocos->logDebug("Fetch holiday's from URL = ".$url);

// ---------------------------------------------------------------------
// INIT VARIABLES.
//
$someHolidaysActive=0;

// ---------------------------------------------------------------------
// FETCH DATA FROM API URL.
//
// Initiate curl
$ch = curl_init();
curl_setopt($ch, CURLOPT_RETURNTRANSFER, true); // Will return the response, if false it print the response
curl_setopt($ch, CURLOPT_URL, $url); // url
curl_setopt($ch,CURLOPT_TIMEOUT,5);  // timeout in seconden
// Execute curl request.
$content=curl_exec($ch);
// Close request.
curl_close($ch);

// ---------------------------------------------------------------------
// ANALYZE DATA FROM API (if valid)
//
// convert json to array
//
if ( $contentArray = json_decode($content) ){
	
	// validate in converted json is an array.
	if (is_array($contentArray)) {

		// count elements in the array.
		if (count($contentArray) > 0){
			
			// read every holiday from the array. Handle
			// differently if it's an array or object.
			foreach($contentArray as $holiday){
				$holidayName = null;
				$holidayDate = null;
				
				// filter data from holiday if its typed array.
				if (is_array($holiday)){
					$holidayName=str_replace(" ","",$holiday['localName']);
					$holidayDate=$holiday['date'];
				}
				// filter data from holiday if its typed object.
				else if (is_object($holiday)){
					$holidayName =str_replace(" ","",$holiday->localName);
					$holidayDate =$holiday->date;
				}
				// generate an error if an holiday is not valid / not stored as an
				// object or array.
				else {
					$cocos->logError("Holiday data not valid :: type = ".gettype($holiday));
				}

				// if the holiday name is valid (not NULL), fetch data
				// and check if the date is today.
				if ($holidayName !== null){
					$holidayName=$tagPrefix.ucfirst($holidayName);
					$holidayActive=intval((date("Y-m-d") == trim($holidayDate)));
					$cocos->tagSetCreate($holidayName,$holidayActive,"int");

					// log tag update/creation.
					$cocos->logDebug("Set / create $holidayName ".$holidayActive);
					
					// register as an acive holiday to summerize an active 
					// holiday in tag scheduleSomeHolidayActive
					if ($holidayActive > 0){
						$someHolidaysActive++;
					}
				}
			}
		}
		else{
			$cocos->logError("Array is empty.");
		}
	}
	else{
		$cocos->logError("JSON to Array converted data is invalid / not an array.");
	}
}
else{
	$cocos->logError("API result empty or invalid JSON");
}

// ### COMBINE TAGS
//
// combinesome days if there is a second holiday, e.g. christmas and easter.
//
$cocos->tagSetCreate($tagPrefix."_Pasen",intval($cocos->tagGet($tagPrefix."_EerstePaasdag"))|intval($cocos->tagGet($tagPrefix."_TweedePaasdag")),"int");
$cocos->tagSetCreate($tagPrefix."_Pinksteren",intval($cocos->tagGet($tagPrefix."_EerstePaasdag"))|intval($cocos->tagGet($tagPrefix."_TweedePaasdag")),"int");
$cocos->tagSetCreate($tagPrefix."_Kerst",intval($cocos->tagGet($tagPrefix."_EerstePinksterdag"))|intval($cocos->tagGet($tagPrefix."_TweedePinksterdag")),"int");
$cocos->tagSetCreate($tagPrefix."_OneOrMore",intval($someHolidaysActive),"int");
$cocos->tagSetCreate($tagPrefix."_Active",intval($someHolidaysActive),"int");
